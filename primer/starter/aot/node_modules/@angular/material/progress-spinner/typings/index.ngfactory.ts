/**
 * @fileoverview This file is generated by the Angular template compiler.
 * Do not edit.
 * @suppress {suspiciousCode,uselessCode,missingProperties,missingOverride}
 */
 /* tslint:disable */


import * as i0 from '@angular/core';
import * as i1 from '@angular/material/progress-spinner';
import * as i2 from '@angular/cdk/bidi';
import * as i3 from '@angular/platform-browser';
import * as i4 from '@angular/cdk/platform';
import * as i5 from '@angular/material/core';
import * as i6 from '@angular/common';
export const MatProgressSpinnerModuleNgFactory:i0.NgModuleFactory<i1.MatProgressSpinnerModule> = i0.ɵcmf(i1.MatProgressSpinnerModule,
    ([] as any[]),(_l:any) => {
      return i0.ɵmod([i0.ɵmpd(512,i0.ComponentFactoryResolver,i0.ɵCodegenComponentFactoryResolver,
          [[8,([] as any[])],[3,i0.ComponentFactoryResolver],i0.NgModuleRef]),i0.ɵmpd(6144,
          i2.DIR_DOCUMENT,(null as any),[i3.DOCUMENT]),i0.ɵmpd(4608,i2.Directionality,
          i2.Directionality,[[2,i2.DIR_DOCUMENT]]),i0.ɵmpd(4608,i4.Platform,i4.Platform,
          ([] as any[])),i0.ɵmpd(512,i5.CompatibilityModule,i5.CompatibilityModule,
          ([] as any[])),i0.ɵmpd(512,i2.BidiModule,i2.BidiModule,([] as any[])),i0.ɵmpd(256,
          i5.MATERIAL_SANITY_CHECKS,true,([] as any[])),i0.ɵmpd(512,i5.MatCommonModule,
          i5.MatCommonModule,[[2,i5.MATERIAL_SANITY_CHECKS]]),i0.ɵmpd(512,i4.PlatformModule,
          i4.PlatformModule,([] as any[])),i0.ɵmpd(512,i1.MatProgressSpinnerModule,
          i1.MatProgressSpinnerModule,([] as any[]))]);
    });
const styles_MatProgressSpinner:any[] = ['.mat-progress-spinner{display:block;position:relative}.mat-progress-spinner svg{position:absolute;transform:translate(-50%,-50%) rotate(-90deg);top:50%;left:50%;transform-origin:center;overflow:visible}.mat-progress-spinner circle{fill:transparent;transform-origin:center;transition:stroke-dashoffset 225ms linear}.mat-progress-spinner.mat-progress-spinner-indeterminate-animation[mode=indeterminate]{animation:mat-progress-spinner-linear-rotate 2s linear infinite}.mat-progress-spinner.mat-progress-spinner-indeterminate-animation[mode=indeterminate] circle{transition-property:stroke;animation-duration:4s;animation-timing-function:cubic-bezier(.35,0,.25,1);animation-iteration-count:infinite}.mat-progress-spinner.mat-progress-spinner-indeterminate-fallback-animation[mode=indeterminate]{animation:mat-progress-spinner-stroke-rotate-fallback 10s cubic-bezier(.87,.03,.33,1) infinite}.mat-progress-spinner.mat-progress-spinner-indeterminate-fallback-animation[mode=indeterminate] circle{transition-property:stroke}@keyframes mat-progress-spinner-linear-rotate{0%{transform:rotate(0)}100%{transform:rotate(360deg)}}@keyframes mat-progress-spinner-stroke-rotate-100{0%{stroke-dashoffset:268.60617px;transform:rotate(0)}12.5%{stroke-dashoffset:56.54867px;transform:rotate(0)}12.51%{stroke-dashoffset:56.54867px;transform:rotateX(180deg) rotate(72.5deg)}25%{stroke-dashoffset:268.60617px;transform:rotateX(180deg) rotate(72.5deg)}25.1%{stroke-dashoffset:268.60617px;transform:rotate(270deg)}37.5%{stroke-dashoffset:56.54867px;transform:rotate(270deg)}37.51%{stroke-dashoffset:56.54867px;transform:rotateX(180deg) rotate(161.5deg)}50%{stroke-dashoffset:268.60617px;transform:rotateX(180deg) rotate(161.5deg)}50.01%{stroke-dashoffset:268.60617px;transform:rotate(180deg)}62.5%{stroke-dashoffset:56.54867px;transform:rotate(180deg)}62.51%{stroke-dashoffset:56.54867px;transform:rotateX(180deg) rotate(251.5deg)}75%{stroke-dashoffset:268.60617px;transform:rotateX(180deg) rotate(251.5deg)}75.01%{stroke-dashoffset:268.60617px;transform:rotate(90deg)}87.5%{stroke-dashoffset:56.54867px;transform:rotate(90deg)}87.51%{stroke-dashoffset:56.54867px;transform:rotateX(180deg) rotate(341.5deg)}100%{stroke-dashoffset:268.60617px;transform:rotateX(180deg) rotate(341.5deg)}}@keyframes mat-progress-spinner-stroke-rotate-fallback{0%{transform:rotate(0)}25%{transform:rotate(1170deg)}50%{transform:rotate(2340deg)}75%{transform:rotate(3510deg)}100%{transform:rotate(4680deg)}}'];
export const RenderType_MatProgressSpinner:i0.RendererType2 = i0.ɵcrt({encapsulation:2,
    styles:styles_MatProgressSpinner,data:{}});
export function View_MatProgressSpinner_0(_l:any):i0.ɵViewDefinition {
  return i0.ɵvid(2,[(_l()(),i0.ɵeld(0,(null as any),(null as any),1,':svg:svg',[['focusable',
      'false'],['preserveAspectRatio','xMidYMid meet']],[[4,'width','px'],[4,'height',
      'px'],[1,'viewBox',0]],(null as any),(null as any),(null as any),(null as any))),
      (_l()(),i0.ɵeld(0,(null as any),(null as any),0,':svg:circle',[['cx','50%'],
          ['cy','50%']],[[1,'r',0],[4,'animation-name',(null as any)],[4,'stroke-dashoffset',
          'px'],[4,'stroke-dasharray','px'],[4,'transform','rotate'],[4,'stroke-width',
          'px']],(null as any),(null as any),(null as any),(null as any)))],(null as any),
      (_ck,_v) => {
        var _co:i1.MatProgressSpinner = _v.component;
        const currVal_0:any = _co._elementSize;
        const currVal_1:any = _co._elementSize;
        const currVal_2:any = _co._viewBox;
        _ck(_v,0,0,currVal_0,currVal_1,currVal_2);
        const currVal_3:any = _co._circleRadius;
        const currVal_4:any = ('mat-progress-spinner-stroke-rotate-' + _co.diameter);
        const currVal_5:any = _co._strokeDashOffset;
        const currVal_6:any = _co._strokeCircumference;
        const currVal_7:any = '360deg';
        const currVal_8:any = _co.strokeWidth;
        _ck(_v,1,0,currVal_3,currVal_4,currVal_5,currVal_6,currVal_7,currVal_8);
      });
}
export function View_MatProgressSpinner_Host_0(_l:any):i0.ɵViewDefinition {
  return i0.ɵvid(0,[(_l()(),i0.ɵeld(0,(null as any),(null as any),1,'mat-progress-spinner',
      [['class','mat-progress-spinner'],['role','progressbar']],[[4,'width','px'],
          [4,'height','px'],[1,'aria-valuemin',0],[1,'aria-valuemax',0],[1,'aria-valuenow',
              0],[1,'mode',0]],(null as any),(null as any),View_MatProgressSpinner_0,
      RenderType_MatProgressSpinner)),i0.ɵdid(573440,(null as any),0,i1.MatProgressSpinner,
      [i0.Renderer2,i0.ElementRef,i4.Platform,[2,i6.DOCUMENT]],(null as any),(null as any))],
      (null as any),(_ck,_v) => {
        const currVal_0:any = i0.ɵnov(_v,1)._elementSize;
        const currVal_1:any = i0.ɵnov(_v,1)._elementSize;
        const currVal_2:any = ((i0.ɵnov(_v,1).mode === 'determinate')? 0: (null as any));
        const currVal_3:any = ((i0.ɵnov(_v,1).mode === 'determinate')? 100: (null as any));
        const currVal_4:any = i0.ɵnov(_v,1).value;
        const currVal_5:any = i0.ɵnov(_v,1).mode;
        _ck(_v,0,0,currVal_0,currVal_1,currVal_2,currVal_3,currVal_4,currVal_5);
      });
}
export const MatProgressSpinnerNgFactory:i0.ComponentFactory<i1.MatProgressSpinner> = i0.ɵccf('mat-progress-spinner',
    i1.MatProgressSpinner,View_MatProgressSpinner_Host_0,{color:'color',diameter:'diameter',
        strokeWidth:'strokeWidth',mode:'mode',value:'value'},{},([] as any[]));
const styles_MatSpinner:any[] = ['.mat-progress-spinner{display:block;position:relative}.mat-progress-spinner svg{position:absolute;transform:translate(-50%,-50%) rotate(-90deg);top:50%;left:50%;transform-origin:center;overflow:visible}.mat-progress-spinner circle{fill:transparent;transform-origin:center;transition:stroke-dashoffset 225ms linear}.mat-progress-spinner.mat-progress-spinner-indeterminate-animation[mode=indeterminate]{animation:mat-progress-spinner-linear-rotate 2s linear infinite}.mat-progress-spinner.mat-progress-spinner-indeterminate-animation[mode=indeterminate] circle{transition-property:stroke;animation-duration:4s;animation-timing-function:cubic-bezier(.35,0,.25,1);animation-iteration-count:infinite}.mat-progress-spinner.mat-progress-spinner-indeterminate-fallback-animation[mode=indeterminate]{animation:mat-progress-spinner-stroke-rotate-fallback 10s cubic-bezier(.87,.03,.33,1) infinite}.mat-progress-spinner.mat-progress-spinner-indeterminate-fallback-animation[mode=indeterminate] circle{transition-property:stroke}@keyframes mat-progress-spinner-linear-rotate{0%{transform:rotate(0)}100%{transform:rotate(360deg)}}@keyframes mat-progress-spinner-stroke-rotate-100{0%{stroke-dashoffset:268.60617px;transform:rotate(0)}12.5%{stroke-dashoffset:56.54867px;transform:rotate(0)}12.51%{stroke-dashoffset:56.54867px;transform:rotateX(180deg) rotate(72.5deg)}25%{stroke-dashoffset:268.60617px;transform:rotateX(180deg) rotate(72.5deg)}25.1%{stroke-dashoffset:268.60617px;transform:rotate(270deg)}37.5%{stroke-dashoffset:56.54867px;transform:rotate(270deg)}37.51%{stroke-dashoffset:56.54867px;transform:rotateX(180deg) rotate(161.5deg)}50%{stroke-dashoffset:268.60617px;transform:rotateX(180deg) rotate(161.5deg)}50.01%{stroke-dashoffset:268.60617px;transform:rotate(180deg)}62.5%{stroke-dashoffset:56.54867px;transform:rotate(180deg)}62.51%{stroke-dashoffset:56.54867px;transform:rotateX(180deg) rotate(251.5deg)}75%{stroke-dashoffset:268.60617px;transform:rotateX(180deg) rotate(251.5deg)}75.01%{stroke-dashoffset:268.60617px;transform:rotate(90deg)}87.5%{stroke-dashoffset:56.54867px;transform:rotate(90deg)}87.51%{stroke-dashoffset:56.54867px;transform:rotateX(180deg) rotate(341.5deg)}100%{stroke-dashoffset:268.60617px;transform:rotateX(180deg) rotate(341.5deg)}}@keyframes mat-progress-spinner-stroke-rotate-fallback{0%{transform:rotate(0)}25%{transform:rotate(1170deg)}50%{transform:rotate(2340deg)}75%{transform:rotate(3510deg)}100%{transform:rotate(4680deg)}}'];
export const RenderType_MatSpinner:i0.RendererType2 = i0.ɵcrt({encapsulation:2,styles:styles_MatSpinner,
    data:{}});
export function View_MatSpinner_0(_l:any):i0.ɵViewDefinition {
  return i0.ɵvid(2,[(_l()(),i0.ɵeld(0,(null as any),(null as any),1,':svg:svg',[['focusable',
      'false'],['preserveAspectRatio','xMidYMid meet']],[[4,'width','px'],[4,'height',
      'px'],[1,'viewBox',0]],(null as any),(null as any),(null as any),(null as any))),
      (_l()(),i0.ɵeld(0,(null as any),(null as any),0,':svg:circle',[['cx','50%'],
          ['cy','50%']],[[1,'r',0],[4,'animation-name',(null as any)],[4,'stroke-dashoffset',
          'px'],[4,'stroke-dasharray','px'],[4,'transform','rotate'],[4,'stroke-width',
          'px']],(null as any),(null as any),(null as any),(null as any)))],(null as any),
      (_ck,_v) => {
        var _co:i1.MatSpinner = _v.component;
        const currVal_0:any = _co._elementSize;
        const currVal_1:any = _co._elementSize;
        const currVal_2:any = _co._viewBox;
        _ck(_v,0,0,currVal_0,currVal_1,currVal_2);
        const currVal_3:any = _co._circleRadius;
        const currVal_4:any = ('mat-progress-spinner-stroke-rotate-' + _co.diameter);
        const currVal_5:any = _co._strokeDashOffset;
        const currVal_6:any = _co._strokeCircumference;
        const currVal_7:any = '360deg';
        const currVal_8:any = _co.strokeWidth;
        _ck(_v,1,0,currVal_3,currVal_4,currVal_5,currVal_6,currVal_7,currVal_8);
      });
}
export function View_MatSpinner_Host_0(_l:any):i0.ɵViewDefinition {
  return i0.ɵvid(0,[(_l()(),i0.ɵeld(0,(null as any),(null as any),1,'mat-spinner',
      [['class','mat-spinner mat-progress-spinner'],['mode','indeterminate'],['role',
          'progressbar']],[[4,'width','px'],[4,'height','px']],(null as any),(null as any),
      View_MatSpinner_0,RenderType_MatSpinner)),i0.ɵdid(573440,(null as any),0,i1.MatSpinner,
      [i0.Renderer2,i0.ElementRef,i4.Platform,[2,i6.DOCUMENT]],(null as any),(null as any))],
      (null as any),(_ck,_v) => {
        const currVal_0:any = i0.ɵnov(_v,1)._elementSize;
        const currVal_1:any = i0.ɵnov(_v,1)._elementSize;
        _ck(_v,0,0,currVal_0,currVal_1);
      });
}
export const MatSpinnerNgFactory:i0.ComponentFactory<i1.MatSpinner> = i0.ɵccf('mat-spinner',
    i1.MatSpinner,View_MatSpinner_Host_0,{color:'color',diameter:'diameter',strokeWidth:'strokeWidth',
        mode:'mode',value:'value'},{},([] as any[]));
//# sourceMappingURL=data:application/json;base64,eyJmaWxlIjoiQzovUFJPSkVUT1MvTk9ERUpTL2V4YW1wbGVzL3ByaW1lci9zdGFydGVyL25vZGVfbW9kdWxlcy9AYW5ndWxhci9tYXRlcmlhbC9wcm9ncmVzcy1zcGlubmVyL3R5cGluZ3MvaW5kZXgubmdmYWN0b3J5LnRzIiwidmVyc2lvbiI6Mywic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsibmc6Ly8vQzovUFJPSkVUT1MvTk9ERUpTL2V4YW1wbGVzL3ByaW1lci9zdGFydGVyL25vZGVfbW9kdWxlcy9AYW5ndWxhci9tYXRlcmlhbC9wcm9ncmVzcy1zcGlubmVyL3R5cGluZ3MvaW5kZXguZC50cyIsIm5nOi8vL0M6L1BST0pFVE9TL05PREVKUy9leGFtcGxlcy9wcmltZXIvc3RhcnRlci9ub2RlX21vZHVsZXMvQGFuZ3VsYXIvbWF0ZXJpYWwvcHJvZ3Jlc3Mtc3Bpbm5lci90eXBpbmdzL2luZGV4LmQudHMuTWF0UHJvZ3Jlc3NTcGlubmVyLmh0bWwiLCJuZzovLy9DOi9QUk9KRVRPUy9OT0RFSlMvZXhhbXBsZXMvcHJpbWVyL3N0YXJ0ZXIvbm9kZV9tb2R1bGVzL0Bhbmd1bGFyL21hdGVyaWFsL3Byb2dyZXNzLXNwaW5uZXIvdHlwaW5ncy9pbmRleC5kLnRzLk1hdFByb2dyZXNzU3Bpbm5lcl9Ib3N0Lmh0bWwiLCJuZzovLy9DOi9QUk9KRVRPUy9OT0RFSlMvZXhhbXBsZXMvcHJpbWVyL3N0YXJ0ZXIvbm9kZV9tb2R1bGVzL0Bhbmd1bGFyL21hdGVyaWFsL3Byb2dyZXNzLXNwaW5uZXIvdHlwaW5ncy9pbmRleC5kLnRzLk1hdFNwaW5uZXIuaHRtbCIsIm5nOi8vL0M6L1BST0pFVE9TL05PREVKUy9leGFtcGxlcy9wcmltZXIvc3RhcnRlci9ub2RlX21vZHVsZXMvQGFuZ3VsYXIvbWF0ZXJpYWwvcHJvZ3Jlc3Mtc3Bpbm5lci90eXBpbmdzL2luZGV4LmQudHMuTWF0U3Bpbm5lcl9Ib3N0Lmh0bWwiXSwic291cmNlc0NvbnRlbnQiOlsiICIsIjxzdmcgW3N0eWxlLndpZHRoLnB4XT1cIl9lbGVtZW50U2l6ZVwiIFtzdHlsZS5oZWlnaHQucHhdPVwiX2VsZW1lbnRTaXplXCIgW2F0dHIudmlld0JveF09XCJfdmlld0JveFwiIHByZXNlcnZlQXNwZWN0UmF0aW89XCJ4TWlkWU1pZCBtZWV0XCIgZm9jdXNhYmxlPVwiZmFsc2VcIj48Y2lyY2xlIGN4PVwiNTAlXCIgY3k9XCI1MCVcIiBbYXR0ci5yXT1cIl9jaXJjbGVSYWRpdXNcIiBbc3R5bGUuYW5pbWF0aW9uLW5hbWVdPVwiJ21hdC1wcm9ncmVzcy1zcGlubmVyLXN0cm9rZS1yb3RhdGUtJyArIGRpYW1ldGVyXCIgW3N0eWxlLnN0cm9rZS1kYXNob2Zmc2V0LnB4XT1cIl9zdHJva2VEYXNoT2Zmc2V0XCIgW3N0eWxlLnN0cm9rZS1kYXNoYXJyYXkucHhdPVwiX3N0cm9rZUNpcmN1bWZlcmVuY2VcIiBbc3R5bGUudHJhbnNmb3JtLnJvdGF0ZV09XCInMzYwZGVnJ1wiIFtzdHlsZS5zdHJva2Utd2lkdGgucHhdPVwic3Ryb2tlV2lkdGhcIj48L2NpcmNsZT48L3N2Zz4iLCI8bWF0LXByb2dyZXNzLXNwaW5uZXI+PC9tYXQtcHJvZ3Jlc3Mtc3Bpbm5lcj4iLCI8c3ZnIFtzdHlsZS53aWR0aC5weF09XCJfZWxlbWVudFNpemVcIiBbc3R5bGUuaGVpZ2h0LnB4XT1cIl9lbGVtZW50U2l6ZVwiIFthdHRyLnZpZXdCb3hdPVwiX3ZpZXdCb3hcIiBwcmVzZXJ2ZUFzcGVjdFJhdGlvPVwieE1pZFlNaWQgbWVldFwiIGZvY3VzYWJsZT1cImZhbHNlXCI+PGNpcmNsZSBjeD1cIjUwJVwiIGN5PVwiNTAlXCIgW2F0dHIucl09XCJfY2lyY2xlUmFkaXVzXCIgW3N0eWxlLmFuaW1hdGlvbi1uYW1lXT1cIidtYXQtcHJvZ3Jlc3Mtc3Bpbm5lci1zdHJva2Utcm90YXRlLScgKyBkaWFtZXRlclwiIFtzdHlsZS5zdHJva2UtZGFzaG9mZnNldC5weF09XCJfc3Ryb2tlRGFzaE9mZnNldFwiIFtzdHlsZS5zdHJva2UtZGFzaGFycmF5LnB4XT1cIl9zdHJva2VDaXJjdW1mZXJlbmNlXCIgW3N0eWxlLnRyYW5zZm9ybS5yb3RhdGVdPVwiJzM2MGRlZydcIiBbc3R5bGUuc3Ryb2tlLXdpZHRoLnB4XT1cInN0cm9rZVdpZHRoXCI+PC9jaXJjbGU+PC9zdmc+IiwiPG1hdC1zcGlubmVyPjwvbWF0LXNwaW5uZXI+Il0sIm1hcHBpbmdzIjoiQUFBQTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7b0JDQUE7TUFBQTtNQUFBO01BQXNKO1VBQUE7VUFBQTtVQUFBOzs7UUFBako7UUFBZ0M7UUFBaUM7UUFBdEUsV0FBSyxVQUFnQyxVQUFpQyxTQUF0RTtRQUFnTDtRQUF5QjtRQUEwRTtRQUFpRDtRQUFtRDtRQUFvQztRQUFyUSxXQUEwQixVQUF5QixVQUEwRSxVQUFpRCxVQUFtRCxVQUFvQyxTQUFyUTs7OztvQkNBdEo7TUFBQTtVQUFBO2NBQUE7bUNBQUEsVUFBQTtNQUFBOztRQUFBO1FBQUE7UUFBQTtRQUFBO1FBQUE7UUFBQTtRQUFBLFdBQUEsMkRBQUE7Ozs7Ozs7Ozs7b0JDQUE7TUFBQTtNQUFBO01BQXNKO1VBQUE7VUFBQTtVQUFBOzs7UUFBako7UUFBZ0M7UUFBaUM7UUFBdEUsV0FBSyxVQUFnQyxVQUFpQyxTQUF0RTtRQUFnTDtRQUF5QjtRQUEwRTtRQUFpRDtRQUFtRDtRQUFvQztRQUFyUSxXQUEwQixVQUF5QixVQUEwRSxVQUFpRCxVQUFtRCxVQUFvQyxTQUFyUTs7OztvQkNBdEo7TUFBQTtVQUFBOzZDQUFBLFVBQUE7TUFBQTs7UUFBQTtRQUFBO1FBQUEsV0FBQSxtQkFBQTs7Ozs7In0=
