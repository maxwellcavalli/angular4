{"version":3,"sources":["accordion.component.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,SAAA,EAAmB,KAAA,EAAM,MAAA,eAAA,CAAA;AAElC,MAKC;IAFD,gBAMG,CAAA;IALH;;OAEG;IACH,QAIG;IAHD,CAAC;;AAQI,6BAAA,GAAoC;IAH3C,EAIE,IAAA,EAAM,SAAA,EAAW,IAAA,EAAM,CAAA;gBAHvB,QAAQ,EAIE,cAAA;gBAHV,QAAQ,EAIE;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;GA+DT;gBACD,MAAM,EAIE,CAAA;;;;;;GAEP,CAIC;aAHH,EAIC,EAAG;CAHJ,CAIC;AAHF;;GAEG;AAGF,iCAAA,GAAA,MAAA,EADA,CAAC;AAGK,iCAAA,GAAyD;IADhE,OAAO,EAEE,CAAA,EAAG,IAAA,EAAM,KAAA,EAAM,EAAE;CADzB,CAEC;AACF;IACA,gBAAgB;IAChB,kBAAkB,CAAC,UAAU,CAAC;IAC9B;;;OAGG;IACH,kBAAkB,CAAC,cAAc,CAAC;IAClC,gBAAgB;IAChB,kBAAkB,CAAC,cAAc,CAAC;IAClC,gBAAgB;IAChB,kBAAkB,CAAC,SAAS,CAAC,KAAK,CAAC;AACnC,CAAC","file":"accordion.component.js","sourceRoot":"","sourcesContent":["import { Component, OnInit, Input } from '@angular/core';\nimport { AccordtionItem } from './accordion-item/accordion-item.component';\nexport class AccordionComponent implements OnInit {\n\n   itens: AccordtionItem[];\nconstructor() { }\n/**\n * @return {?}\n */\nngOnInit() {\n  }\n\n  \n\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector: 'mx-accordion',\n  template: `\n    <div id='cssmenu'>\n      <mx-accordion-item [itens]=\"itens\">\n      </mx-accordion-item>\n    </div>\n\n    <!-- <div id='cssmenu'>\n      <ul>\n        <li>\n          <a href='#'>\n            <span>Home</span>\n          </a>\n        </li>\n        <li class='active has-sub'>\n          <a href='#' mxAccordionClick>\n            <span>Products</span>\n            <span class=\"holder\"></span>\n          </a>\n          <ul>\n            <li class='has-sub'>\n              <a href='#' mxAccordionClick>\n                <span>Product 1</span>\n              </a>\n              <ul>\n                <li>\n                  <a href='#'>\n                    <span>Sub Product</span>\n                  </a>\n                </li>\n                <li class='last'>\n                  <a href='#'>\n                    <span>Sub Product</span>\n                  </a>\n                </li>\n              </ul>\n            </li>\n            <li class='has-sub'>\n              <a href='#'>\n                <span>Product 2</span>\n              </a>\n              <ul>\n                <li>\n                  <a href='#'>\n                    <span>Sub Product</span>\n                  </a>\n                </li>\n                <li class='last'>\n                  <a href='#'>\n                    <span>Sub Product</span>\n                  </a>\n                </li>\n              </ul>\n            </li>\n          </ul>\n        </li>\n        <li>\n          <a href='#'>\n            <span>About</span>\n          </a>\n        </li>\n        <li class='last'>\n          <a href='#'>\n            <span>Contact</span>\n          </a>\n        </li>\n      </ul>\n    </div> -->\n  `,\n  styles: [`\n    #cssmenu {\n      width: 300px;\n      font-family: Helvetica, Arial, sans-serif;\n      color: #ffffff;\n    }\n  `]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'itens': [{ type: Input },],\n};\n}\n\nfunction AccordionComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nAccordionComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nAccordionComponent.ctorParameters;\n/** @type {?} */\nAccordionComponent.propDecorators;\n/** @type {?} */\nAccordionComponent.prototype.itens;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}